#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<arpa/inet.h>
#include<sys/socket.h>
#define BUF_SIZE 30
void error_handling(char *message);
int main(int argc,char *argv[])
{
    int sock;
    char message[BUF_SIZE];
    int len;
    socklen_t adr_sz;
    struct sockaddr_in ser_adr,from_adr;
    if(argc!=3) exit(1);

    sock=socket(PF_INET,SOCK_DGRAM,0);
    if(sock==-1) error_handling("socket error");

    memset(&ser_adr,0,sizeof(ser_adr));
    ser_adr.sin_family=AF_INET;
    ser_adr.sin_addr.s_add=inet_addr(argv[1]);
    ser_adr.sin_port=htons(atoi(argv[2]));


    scanf("%s",messag);
    adr_sz=sizeof(from_adr);
    sendto(sock,message,strlen(messag),0,(struct *sockaddr)&ser_adr,adr_sz);
    len=recvfrom(sock,message,BUF_SIZE,0,(struct *sockaddr)&from_adr,&adr_sz);
    message[len]='\0';
    close(sock);
    return 0;
}

void error_handling(char *message){
    fputs(message,stderr);
    fputs('\n',stderr);
    exit(1);
}
