/*
#include<sys/wait.h>
pid_t waitpid(pid_t pid,int *statloc,int options);
    成功时返回终止的子进程ID或0，失败时返回-1
    pid:等待终止的目标子进程ID，若传递-1，则与wait函数相同，可以等待任意子进程终止
    statloc:与wait函数参数具有相同的意义
    options:传递头文件sys/wait.h中声明常量WNOHANG,即使没有终止的子进程也不会进入阻塞状态
            而是返回0并退出函数
*/
#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<arpa/inet.h>
#include<sys/socket.h>
#include<sys/wait.h>
#define BUF_SIZE 30
int main()
{
    int status;
    pid_t pid=fork();
    if(pid==0){
        sleep(15);
        return 24;
    }
    else{
        while(!waitpid(-1,&status,WNOHANG)){
            sleep(3);
        }
        if(WIFEXITED(status))
            printf("Child send%d\n",WEXITSTATUS(status));
    }
    return 0;
}

